
@misc{nie_extend_2023,
	title = {Extend {Wave} {Function} {Collapse} to {Large}-{Scale} {Content} {Generation}},
	url = {http://arxiv.org/abs/2308.07307},
	abstract = {Wave Function Collapse (WFC) is a widely used tilebased algorithm in procedural content generation, including textures, objects, and scenes. However, the current WFC algorithm and related research lack the ability to generate commercialized large-scale or infinite content due to constraint conflict and time complexity costs. This paper proposes a Nested WFC (NWFC) algorithm framework to reduce time complexity. To avoid conflict and backtracking problems, we offer a complete and sub-complete tileset preparation strategy, which requires only a small number of tiles to generate aperiodic and deterministic infinite content. We also introduce the weight-brush system that combines N-WFC and sub-complete tileset, proving its suitability for game design. Our contribution addresses WFC’s challenge in massive content generation and provides a theoretical basis for implementing concrete games.},
	language = {en},
	urldate = {2024-05-28},
	publisher = {arXiv},
	author = {Nie, Yuhe and Zheng, Shaoming and Zhuang, Zhan and Song, Xuan},
	month = aug,
	year = {2023},
	note = {arXiv:2308.07307 [cs]},
	keywords = {Computer Science - Artificial Intelligence},
	annote = {Comment: This paper is accepted by IEEE Conference on Games 2023 (nomination of the Best Paper Award)},
	file = {Nie et al. - 2023 - Extend Wave Function Collapse to Large-Scale Conte.pdf:C\:\\Users\\jakob\\Zotero\\storage\\CJL8CRNJ\\Nie et al. - 2023 - Extend Wave Function Collapse to Large-Scale Conte.pdf:application/pdf},
}

@inproceedings{greuter_real-time_2003,
	address = {Melbourne Australia},
	title = {Real-time procedural generation of `pseudo infinite' cities},
	isbn = {978-1-58113-578-7},
	url = {https://dl.acm.org/doi/10.1145/604471.604490},
	doi = {10.1145/604471.604490},
	language = {en},
	urldate = {2024-05-28},
	booktitle = {Proceedings of the 1st international conference on {Computer} graphics and interactive techniques in {Australasia} and {South} {East} {Asia}},
	publisher = {ACM},
	author = {Greuter, Stefan and Parker, Jeremy and Stewart, Nigel and Leach, Geoff},
	month = feb,
	year = {2003},
	pages = {87},
}

@article{kelly_survey_2006,
	title = {A {Survey} of {Procedural} {Techniques} for {City} {Generation}},
	copyright = {Creative Commons Attribution-Noncommercial-Share Alike 3.0 License},
	url = {https://arrow.dit.ie/itbj/vol7/iss2/5/},
	doi = {10.21427/D76M9P},
	abstract = {The computer game industry requires a skilled workforce and this combined with the complexity of modern games, means that production costs are extremely high. One of the most time consuming aspects is the creation of game geometry, the virtual world which the players inhabit. Procedural techniques have been used within computer graphics to create natural textures, simulate special effects and generate complex natural models including trees and waterfalls. It is these procedural techniques that we intend to harness to generate geometry and textures suitable for a game situated in an urban environment. Procedural techniques can provide many benefits for computer graphics applications when the correct algorithm is used. An overview of several commonly used procedural techniques including fractals, L-systems, Perlin noise, tiling systems and cellular basis is provided. The function of each technique and the resulting output they create are discussed to better understand their characteristics, benefits and relevance to the city generation problem. City generation is the creation of an urban area which necessitates the creation of buildings, situated along streets and arranged in appropriate patterns. Some research has already taken place into recreating road network patterns and generating buildings that can vary in function and architectural style. We will study the main body of existing research into procedural city generation and provide an overview of their implementations and a critique of their functionality and results. Finally we present areas in which further research into the generation of cities is required and outline our research goals for city generation.},
	language = {en},
	urldate = {2024-05-28},
	author = {Kelly, George},
	year = {2006},
	note = {Publisher: Dublin Institute of Technology},
	file = {Kelly - 2006 - A Survey of Procedural Techniques for City Generat.pdf:C\:\\Users\\jakob\\Zotero\\storage\\FJS8L8EZ\\Kelly - 2006 - A Survey of Procedural Techniques for City Generat.pdf:application/pdf},
}

@article{kim_procedural_2018,
	title = {Procedural city generation beyond game development},
	volume = {10},
	issn = {1946-7729},
	url = {https://dl.acm.org/doi/10.1145/3292390.3292397},
	doi = {10.1145/3292390.3292397},
	abstract = {The common trend in the scientific inquiry of urban areas and their populations is to use real-world geographic and population data to understand, explain, and predict urban phenomena. We argue that this trend limits our understanding of urban areas as dealing with arbitrarily collected geographic data requires technical expertise to process; moreover, population data is often aggregated, sparsified, or anonymized for privacy reasons. We believe synthetic urban areas generated via procedural city generation, which is a technique mostly used in the gaming area, could help improve the state-of-the-art in many disciplines which study urban areas. In this paper, we describe a selection of research areas that could benefit from such synthetic urban data and show that the current research in procedurally generated cities needs to address specific issues (e.g., plausibility) to sufficiently capture real-world cities and thus take such data beyond gaming.},
	language = {en},
	number = {2},
	urldate = {2024-05-28},
	journal = {SIGSPATIAL Special},
	author = {Kim, Joon-Seok and Kavak, Hamdi and Crooks, Andrew},
	month = nov,
	year = {2018},
	pages = {34--41},
}

@article{morris_modifying_nodate,
	title = {Modifying {Wave} {Function} {Collapse} for more {Complex} {Use} in {Game} {Generation} and {Design}},
	abstract = {Wave Function Collapse (WFC) is an image-based Procedural Content Generation (PCG) algorithm that uses constraints extracted from an input image to generate a similar, yet novel output. The goal of this thesis is to modify WFC with extra constraints and parameters that would allow a game designer to have more control over the algorithm to produce more varied and speciﬁc results. This thesis introduces the ﬁeld of Procedural Content Generation (of which Wave Function Collapse is a part) and details the WFC algorithm. It then examines past work done in these two topics, along with developments in the ﬁeld of content generation for the game Super Mario Bros. and developments of heuristics used to analyze PCG content. The thesis next explains the speciﬁcs of WFC’s core algorithm, introduces the new modiﬁcations made to it, and details heuristics used to analyze its output. Finally, experiments are run using these modiﬁcations to generate content using levels from the original Super Mario Bros. as input, and previously introduced heuristics are used to assess the results.},
	language = {en},
	author = {Morris, Quentin Edward},
	file = {Morris - Modifying Wave Function Collapse for more Complex .pdf:C\:\\Users\\jakob\\Zotero\\storage\\4ASDRSNC\\Morris - Modifying Wave Function Collapse for more Complex .pdf:application/pdf},
}

@article{scholz_tile-based_nodate,
	title = {Tile-{Based} {Procedural} {Terrain} {Generation}},
	language = {en},
	author = {Scholz, Dominik},
	file = {Scholz - Tile-Based Procedural Terrain Generation.pdf:C\:\\Users\\jakob\\Zotero\\storage\\JCBU9BLI\\Scholz - Tile-Based Procedural Terrain Generation.pdf:application/pdf},
}

@phdthesis{moller_expanding_2019,
	title = {Expanding {Wave} {Function} {Collapse} with {Growing} {Grids} for {Procedural} {Content} {Generation}.},
	abstract = {This project combines Wave Function Collapse and Growing Grids to create an improved procedural content generator that creates diverse output. A solution for traversal and feature distribution was also implemented. The results were evaluated by measuring the difficulty of navigating maps created. Another evaluation measured the recognizability of maps created with the system. A visual inspection was also done to showcase the capabilities. The results showed that navigation was significantly harder in maps created with the system compared to maps created with the original WFC algorithm. The results from the second test showed that it was slightly easier for the evaluation participants to recognize the maps created with the system compared to maps created with the original WFC algorithm.},
	author = {Møller, Tobias and Billeskov, Jonas},
	month = may,
	year = {2019},
	doi = {10.13140/RG.2.2.23494.01607},
	file = {Full Text PDF:C\:\\Users\\jakob\\Zotero\\storage\\2ART4PDM\\Møller und Billeskov - 2019 - Expanding Wave Function Collapse with Growing Grid.pdf:application/pdf},
}

@article{karth_wavefunctioncollapse_2022,
	title = {{WaveFunctionCollapse}: {Content} {Generation} via {Constraint} {Solving} and {Machine} {Learning}},
	volume = {14},
	issn = {2475-1510},
	shorttitle = {{WaveFunctionCollapse}},
	url = {https://ieeexplore.ieee.org/document/9421370},
	doi = {10.1109/TG.2021.3076368},
	abstract = {In this article, we describe WaveFunctionCollapse (WFC), a new family of algorithms for content generation. WFC was recently invented by independent game developer M. Gumin and has since been adopted and adapted by other game developers. Trends in academic research on content generation have only recently suggested the use of ideas from constraint solving and machine learning, so it is surprising to see these manifested in in-the-wild algorithms developed outside of an academic context. We illuminate the common components in this family of algorithms by way of a rational reconstruction. Through experiments with the reconstruction we probe the impact of design choices made in various adaptations of WFC (e.g., the role of backtracking, search heuristics, or pattern classification and rendering strategies). This article highlights a mode of incremental content generation that has been overlooked by past surveys of content generation methods.},
	number = {3},
	urldate = {2024-06-03},
	journal = {IEEE Transactions on Games},
	author = {Karth, Isaac and Smith, Adam M.},
	month = sep,
	year = {2022},
	note = {Conference Name: IEEE Transactions on Games},
	keywords = {Backtracking, Constraint solving, Games, Machine learning, Machine learning algorithms, Pipelines, procedural content generation, rational reconstruction, search heuristics, Search problems, Space exploration, WaveFunctionCollapse (WFC)},
	pages = {364--376},
	file = {IEEE Xplore Abstract Record:C\:\\Users\\jakob\\Zotero\\storage\\HN8TY2WP\\9421370.html:text/html;Volltext:C\:\\Users\\jakob\\Zotero\\storage\\NP2IHC4B\\Karth und Smith - 2022 - WaveFunctionCollapse Content Generation via Const.pdf:application/pdf},
}

@article{hedman_representing_nodate,
	title = {Representing video game style with procedurally generated content: {How} wave function collapse can be used to represent style in video games},
	abstract = {As the video gaming industry continues to grow, developers face increasing pressure to produce innovative content swiftly and cost-effectively. Procedural Content Generation (PCG), the use of algorithms to automate content creation, offers a solution to this problem. This paper explores the PCG algorithm wave function collapse’s (WFC) potential for replicating the stylistic design in video games. We provide an exploration of how the WFC algorithm works and discuss the methodology used to evaluate the generator’s ability to generate content that mimics a video game style. The study evaluates the algorithm’s eﬀicacy by generating levels in the style of the iconic game Super Mario Bros, highlighting its ability to produce original content while maintaining the game’s stylistic features. Additionally, we do an examination of the research surrounding PCG and Machine Learning in Super Mario Bros, drawing comparisons with our methodology. The paper concludes with an assessment of WFC’s capabilities to replicate style with its generated content with the help of earlier established evaluation metrics.},
	language = {en},
	author = {Hedman, Filip},
	file = {Representing video game style with procedurally generated content.pdf:C\:\\Users\\jakob\\Nextcloud\\WFC City Generation Bachelorarbeit\\Citation Paper\\Representing video game style with procedurally generated content.pdf:application/pdf},
}

@misc{gumin_wave_2016,
	title = {Wave {Function} {Collapse} {Algorithm}},
	url = {https://github.com/mxgmn/WaveFunctionCollapse},
	abstract = {Bitmap \& tilemap generation from a single example with the help of ideas from quantum mechanics},
	urldate = {2024-06-03},
	author = {Gumin, Maxim},
	month = sep,
	year = {2016},
	note = {original-date: 2016-09-30T11:53:17Z},
}

@inproceedings{dahlskog_patterns_2013,
	title = {Patterns as {Objectives} for {Level} {Generation}},
	abstract = {This paper discusses how to use design patterns in procedural level generation, with particular reference to the classic console game Super Mario Bros. In a previous paper, we analyzed the levels in this game to find a set of recurring level design patterns, and discussed an implementation where lev-els were produced from concatenation of these patterns. In this paper, we instead propose using patterns as design ob-jectives. An implementation of this based on evolutionary computation is presented. In this implementation, levels are represented as a set of vertical slices from the original game, and the fitness function count the number of patterns found. Qualitative analysis of generated levels is performed in order to identify strengths and challenges of this method.},
	author = {Dahlskog, Steve and Togelius, Julian},
	month = may,
	year = {2013},
	file = {Full Text PDF:C\:\\Users\\jakob\\Zotero\\storage\\FFZZ2FU2\\Dahlskog und Togelius - 2013 - Patterns as Objectives for Level Generation.pdf:application/pdf},
}

@inproceedings{kim_automatic_2019,
	address = {London, United Kingdom},
	title = {Automatic {Generation} of {Game} {Content} using a {Graph}-based {Wave} {Function} {Collapse} {Algorithm}},
	copyright = {https://ieeexplore.ieee.org/Xplorehelp/downloads/license-information/IEEE.html},
	isbn = {978-1-72811-884-0},
	url = {https://ieeexplore.ieee.org/document/8848019/},
	doi = {10.1109/CIG.2019.8848019},
	abstract = {This paper describes graph-based Wave Function Collapse algorithm for procedural content generation. The goal of this system is to enable a game designer to procedurally create key content elements in the game level through simple association rule input. To do this, we propose a graph-based data structure that can be easily integrated with a navigation mesh data structure in a three-dimensional world. With our system, if the user inputs the minimum association rule, it is possible to effectively perform procedural content generation in the three-dimensional world. The experimental results show that the Wave Function Collapse algorithm, which is a texture synthesis algorithm, can be extended to a non-grid shape with high controllability and scalability.},
	language = {en},
	urldate = {2024-06-03},
	booktitle = {2019 {IEEE} {Conference} on {Games} ({CoG})},
	publisher = {IEEE},
	author = {Kim, Hwanhee and Lee, Seongtaek and Lee, Hyundong and Hahn, Teasung and Kang, Shinjin},
	month = aug,
	year = {2019},
	pages = {1--4},
	file = {Automatic_Generation_of_Game_Content_using_a_Graph-based_Wave_Function_Collapse_Algorithm.pdf:C\:\\Users\\jakob\\Nextcloud\\WFC City Generation Bachelorarbeit\\Citation Paper\\Automatic_Generation_of_Game_Content_using_a_Graph-based_Wave_Function_Collapse_Algorithm.pdf:application/pdf},
}

@article{bailly_genetic-wfc_2023,
	title = {Genetic-{WFC}: {Extending} {Wave} {Function} {Collapse} {With} {Genetic} {Search}},
	volume = {15},
	copyright = {https://ieeexplore.ieee.org/Xplorehelp/downloads/license-information/IEEE.html},
	issn = {2475-1502, 2475-1510},
	shorttitle = {Genetic-{WFC}},
	url = {https://ieeexplore.ieee.org/document/9836972/},
	doi = {10.1109/TG.2022.3192930},
	abstract = {This article presents genetic wave function collapse (WFC), a procedural level generation algorithm that mixes genetic optimization with WFC, a local adjacency constraints propagation algorithm. We use a synthetic player to evaluate the novelty, safety, and complexity of the generated levels. Novelty is maximized when the synthetic player goes on tiles not visited for a long time, safety is related to how far it can see, and complexity evaluates the variability of the surrounding tiles. WFC extracts constraints from example levels, and allows us to perform the genetic search on levels with few local asset placement errors, while using as little level design rules as possible. We show that we are able to rely on WFC while optimizing the results, ﬁrst by inﬂuencing WFC asset selection and then by reencoding the chosen modules back to our genotype, in order to optimize crossover. We compare the ﬁtness curves and best maps of our method with other approaches. We then visually explore the kind of levels we are able to generate by sampling different values of safety and complexity, giving a glimpse of the variability that our approach is able to reach.},
	language = {en},
	number = {1},
	urldate = {2024-06-03},
	journal = {IEEE Transactions on Games},
	author = {Bailly, Raphael and Levieux, Guillaume},
	month = mar,
	year = {2023},
	pages = {36--45},
	file = {Genetic-WFC_Extending_Wave_Function_Collapse_With_Genetic_Search.pdf:C\:\\Users\\jakob\\Nextcloud\\WFC City Generation Bachelorarbeit\\Citation Paper\\Genetic-WFC_Extending_Wave_Function_Collapse_With_Genetic_Search.pdf:application/pdf},
}

@article{lyu_procedural_2015,
	title = {Procedural {Urban} {Modeling} of {Population}, {Road} {Network} and {Land} {Use}},
	volume = {10},
	copyright = {https://www.elsevier.com/tdm/userlicense/1.0/},
	issn = {23521465},
	url = {https://linkinghub.elsevier.com/retrieve/pii/S2352146515002690},
	doi = {10.1016/j.trpro.2015.09.082},
	abstract = {This paper introduces an urban simulation system generating urban layouts with population, road network and land use layers. The desired urban spatial structure is obtained by generating population map based on population density models. The road network is generated at three spatial levels corresponding to the road hierarchy. The land use allocation is based on rule-based algorithm. And global and local parameters are designed to guarantee the flexibility and modification of urban layouts. The expected results are urban layouts suitable for academic scenario analysis.},
	language = {en},
	urldate = {2024-06-03},
	journal = {Transportation Research Procedia},
	author = {Lyu, Xiaoming and Han, Qi and De Vries, Bauke},
	year = {2015},
	pages = {327--334},
	file = {Procedural urban modeling of population, road network and land.pdf:C\:\\Users\\jakob\\Nextcloud\\WFC City Generation Bachelorarbeit\\Citation Paper\\Procedural urban modeling of population, road network and land.pdf:application/pdf},
}

@article{kim_puzzle-level_2024,
	title = {Puzzle-{Level} {Generation} with {Simple}-tiled and {Graph}-based {Wave} {Function} {Collapse} {Algorithms}},
	copyright = {https://creativecommons.org/licenses/by/4.0/legalcode},
	issn = {2475-1502, 2475-1510},
	url = {https://ieeexplore.ieee.org/document/10443044/},
	doi = {10.1109/TG.2024.3368017},
	abstract = {This study presents case studies using two wave function collapse (WFC) methods, graph-based WFC and simple tiled WFC, to create playable levels for two logic puzzle games: Strimko (Latin Squares) and Flow (connecting dots with pipes). We then evaluate the quality of the generated levels through extensive experiments. Our results indicate that WFC-generated levels are high quality, follow the graph structures’ constraints, and are generated faster than levels generated by depth-first search and genetic algorithms. WFC methods can also adapt to new system specifications, common in puzzle games, by changing only the data instead of the code. This increases the stability of content production based on procedural content generation since it relies on data rather than procedures. Furthermore, WFC methods increase the efficiency of the manual process of creating in-game puzzle levels, allowing game designers to complete more tasks in the same amount of time and create a wider variety of assets.},
	language = {en},
	urldate = {2024-06-03},
	journal = {IEEE Transactions on Games},
	author = {Kim, Hwanhee and Seo, Beomjoo and Kang, Shinjin},
	year = {2024},
	pages = {1--11},
	file = {Puzzle-Level_Generation_with_Simple-tiled_and_Graph-based_Wave_Function_Collapse_Algorithms.pdf:C\:\\Users\\jakob\\Nextcloud\\WFC City Generation Bachelorarbeit\\Citation Paper\\Puzzle-Level_Generation_with_Simple-tiled_and_Graph-based_Wave_Function_Collapse_Algorithms.pdf:application/pdf},
}

@article{greuter_real-time_nodate,
	title = {Real-time {Procedural} {Generation} of ‘{Pseudo} {Inﬁnite}’ {Cities}},
	abstract = {We present an approach to procedural generation of ‘pseudo inﬁnite’ virtual cities in real-time. The cities contain geometrically varied buildings that are generated as needed. The building generation parameters are created by a pseudo random number generator, seeded with an integer derived from the building’s position. The varied building geometries are extruded from a set of ﬂoor plans. The ﬂoor plans for each building are created by combining randomly generated polygons in an iterative process. A display list caching and frustum ﬁlling approach manages the generation of buildings and the use of system resources. This approach has been implemented on commodity PC hardware, resulting in interactive frame rates.},
	language = {en},
	author = {Greuter, Stefan and Parker, Jeremy and Stewart, Nigel and Leach, Geoff},
	file = {Real-time Procedural Generation of ‘Pseudo Infinite’ Cities.pdf:C\:\\Users\\jakob\\Nextcloud\\WFC City Generation Bachelorarbeit\\Citation Paper\\Real-time Procedural Generation of ‘Pseudo Infinite’ Cities.pdf:application/pdf},
}
